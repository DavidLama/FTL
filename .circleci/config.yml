version: 2

.job_template: &job_template
  docker:
    - image: pihole/ftl-build:$CIRCLE_JOB
  steps:
    - checkout
    - run:
        name: "Setup"
        command: |
          make clean
    - run:
        name: "Build"
        command: |
          BRANCH=$([ -z "$CIRCLE_TAG" ] && echo "$CIRCLE_BRANCH" || echo "master")

          make CFLAGS="${CFLAGS}" GIT_BRANCH="${BRANCH}" GIT_TAG="${CIRCLE_TAG}"
          file pihole-FTL
    - run:
        name: "Upload"
        command: |
          FOLDER=$([ -z "$CIRCLE_TAG" ] && echo "$CIRCLE_BRANCH" || echo "$CIRCLE_TAG")
          mv pihole-FTL "${BIN_NAME}"
          sha1sum pihole-FTL-* > ${BIN_NAME}.sha1
          chmod +x ./FTL-client
          [[ "$CIRCLE_PR_NUMBER" == "" ]] && sftp $SSH_USER@$SSH_HOST <<<$'mkdir ${FOLDER}'
          [[ "$CIRCLE_PR_NUMBER" == "" ]] && sftp $SSH_USER@$SSH_HOST <<<$'put ${BIN_NAME}*'
          
jobs:
  arm:
    <<: *job_template
    environment:
      BIN_NAME: "pihole-FTL-arm-linux-gnueabi"

  armhf:
    <<: *job_template
    environment:
      BIN_NAME: "pihole-FTL-arm-linux-gnueabihf"

  aarch64:
    <<: *job_template
    environment:
      BIN_NAME: "pihole-FTL-aarch64-linux-gnu"

  x86_64:
    <<: *job_template
    environment:
      BIN_NAME: "pihole-FTL-linux-x86_64"

  x86_64-musl:
    <<: *job_template
    environment:
      BIN_NAME: "pihole-FTL-musl-linux-x86_64"

  x86_32:
    <<: *job_template
    environment:
      BIN_NAME: "pihole-FTL-linux-x86_32"
      CFLAGS: "-m32"

workflows:
  version: 2
  build:
    jobs:
      - arm:
          filters:
            tags:
              only: /^v.*/
      - armhf:
          filters:
            tags:
              only: /^v.*/
      - aarch64:
          filters:
            tags:
              only: /^v.*/
      - x86_64:
          filters:
            tags:
              only: /^v.*/
#      - x86_64-musl
      - x86_32:
          filters:
            tags:
              only: /^v.*/

